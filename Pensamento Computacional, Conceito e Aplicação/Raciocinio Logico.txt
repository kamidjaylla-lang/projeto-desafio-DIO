Raciocínio Logico 

O Raciocínio Logico é uma forma de pensamento estruturado ou raciocínio, que permite encontrar a conclusão ou determinar a resolução de de um problema, permitindo que problemas, permitindo que sua complexidade tenha uma compreensão mais ampla e ágil.

Classificações de Raciocínio Lógico:

Indução - É um processo de inferência onde se chega a uma conclusão geral a partir de observações de casos específicos, como por exemplo, observar que vários cisnes que você viu são brancos, e então concluir que todos os cisnes são brancos.

Dedução - É um processo de raciocínio que parte de premissas gerais para chegar a conclusões especificas.

Exemplo: Premissa maior: Todos os homens são mortais - Premissa menor: Sócrates é um homem - Conclusão: Logo, Sócrates é mortal.

Abdução: Raciocínio que busca a melhor explicação possível para um fenômeno, partindo da observação que contextualize a premissa da situação.

Exemplo: Situação: Você encontra o chão do quintal molhado - Abdução: Você pode inferir que choveu (mesmo que não tenha visto a chuva ) se baseando em experiencias anteriores, provavelmente choveu.


Decomposição

Estratégia - Processo de quebrar e determinar partes menores e gerenciáveis para em seguida, analisar, estudar, explorar e concluindo por decompor em elementos constituíveis a fim de realizar um exame detalhado.

Síntese - Processo de reconstrução que consiste em resumir elementos distintos em um único elemento, ou seja, fundir elementos de maneira coerente.

Como Decompor: Entenda os componentes do problema e identifique as características e dependências, deixando o principal em segundo plano.

Exemplo do Cotidiano: Cozinhar - Identificar os ingredientes - Determinar as etapas - Executar as etapas - Executar cada etapa - Agregar os ingredientes para finalizar (recompor com coerência).

Exemplo Simples: Funcionamento de uma bicicleta - Identificar componentes - Função de cada componente - Interdependência das peças - Funcionamento do Sistema.

Exemplo Complexo: Criação de um App - Finalidade - Interface - Funcionalidades - Requisitos antecipados - Definição de componentes e etapas - Desenvolvimento mais eficiente.

Aplicação de Estratégia

Ordem de execução de tarefas menores:

- Sequencial - Dependência entra tarefas, executadas em fila.

- Paralelo - Tarefas podem ser executadas de forma simultânea.

Padrões: Modelo base - Estrutura invariante - Repetição. 

Exemplo: Um upload de uma foto em uma rede social se torna um metadado que, uma vez dentro da plataforma e através dela, é realizado um processo de compressão, e por fim, a imagem é salva em um banco de dados, otimizando o uso de armazenamento. O processo de compressão é utilizado por diversas plataformas.

Generalizar: Tornar de modo geral, mais amplo, extensão, ou seja, a generalização é uma operação intelectual que consiste em reunir numa classe geral, um conjunto de seres ou fenômenos similares.

Exemplo: "Pássaro" é uma palavra referente ao conjunto de seres que tem penas e em sua maioria voam.

Classificação de Dados:

- Características - Pontos Essenciais - Generalizar x Detalhar.

Exemplo: Representação de Dados de Estudantes.

(Pontos Essenciais)     (Detalhes)
         |                  |
 - Nome Completo        - Trabalho
 - Matricula            - Tem Filhos  
 - Endereço             - Tamanho do Calçado
 - Campus               - Estilo de roupa
 - Curso                - Corte de Cabelo  
 - Telefone             - Gosto Musical
 - E-Mail               - Filme Preferido

Exemplo 2: Limpeza de Um Terreno

(Pontos Essenciais)      (Detalhes)
         |                   |
    - Tempo              - Altura da Grama 
    - Distancia          - Tipos de Planta
    - Clima              - Pedras no Caminho
    - Utensílios         - Roupa Para Usar

Algoritimos

Processamento de Dados: O computador recebe, manipula e armazena dados. 

Definido também como um processo de resolução de problemas, passo-a-passo utilizando instruções para determinar o que precisa ser feito, de forma que se chegue a um entendimento entre humano e maquina.

Desenvolvimento de programa:

- Análise: Estudo e definição dos dados de entrada e saída.

- Algoritimo: Descreve o problema por meio de ferramentas narrativas, fluxograma, ou pseudocódigo.

- Codificação: O algoritimo é codificado de acordo com a linguagem de programação escolhida.

Resolução
    |
- Sequencia de passos com objetivo definido
- Execução de tarefas especificas 
- Conjunto de operações que resultam em uma sucessão finita de ações.

Exemplos de algoritomos:

- Preparo de sanduiche - Cortar o pão, entre ele, pôr uma fatia de presunto e outra de queijo, feche o pão.

- Trocar uma lâmpada - Pôr uma escada abaixo da lâmpada, suba na escada com a lâmpada nova em mãos, retire a lâmpada usada, instale a nova lâmpada, desça da escada e guarde-a.

Como construir um algoritimo:

- Compreensão do problema - Pontos mais importantes.
- Definir dados de entrada - Dados fornecidos e Cenário.
- Definir processamento - Cálculos e restrições.
- Utilizar um método de construção - Teste de diagnostico - Construção e refinamento do algoritimo.

Tipos de Construção de Algoritimos:

- Narrativa - Utilização da linguagem natural - Sem conceitos novos - Diversas interpretações possíveis.

- Fluxograma - Utilização de símbolos pré-definidos - Simples entendimento - Conhecimento prévio das estruturas de símbolos.

- Pseudocódigo - Linguagens de programação - Regras definidas - Passos a serem seguidos.

Exemplo: Multiplicação de dois números.

Passo 1 - Recebe os valores - |Inicio| - |2.2|
Passo 2 - Multiplica - |M = 2.2|
Passo 3 - Imprime Resultado - |M = 4| - Fim

Exemplo de Situação Alternativa "Se" ou "Caso Contrario": Media dos Alunos.

Passo 1 - Recebe os Valores - |Inicio| - |N1, N2|
Passo 2 - Media Aritmética - |M = (N1+N2)/2|
Passo 3 - Imprime Resultado - |M = N3|
Passo 4 - Regra/Condição da Aprovação - |M| - |=>7| - Aprovado.
                                         |
                                        |<7| - Reprovado.

Estudo de Casos

Exemplo: Perdido na floresta.

Como resolver o problema utilizando pensamento computacional:
- Identificar mecanismos.
- Recursos Comuns.
- Detalhes mais importantes.

--Sobrevivência -------------------------------------Fogo
       |                                              |
     Água - Chuva, nascente ou rio------------------Ferver, higienizar.
     Comida - Caçar ou coletar---------------------Cozinhar ou assar.
     Abrigo - Localização e Proteção---------------Aquecer, secar e afastar predadores.
                   |
              Exploração, mapeamento de área e zonas de perigo ou segurança.
                              |
                         Reconhecimento - Lugar mais alto - Ponto de referencia e observação. 
                          

Aplicações de logica: Decomposição, reconhecimento de padrões e abstração.
